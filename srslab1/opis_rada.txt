Opis rada sustava

Na početku kada pokrenemo sustavu unosi se naredba init te glavna zaporka. Tada se stvori baza podataka (u koju se kasnije naredbom put unose adrese i zaporke) te se postavi glavna zaporka na kojoj se bazira sama sigurnost sustava. Ako nakon toga unesemo put naredbu, ispravnu glavnu zaporku i adresu i zaporku za tu adresu bazu podataka će nam se spremiti adresa i zaporka u enkriptiranom obliku. No ako unesemo krivu glavnu lozinku sustav će prekinuti sa radom uz poruku “Master password incorrect or integrity check failed”. Također s obzirom da se salt, IV i HMAC nalaze u zasebnim binarnim datotekama u slučaju da napadač promijeni nešto u nekoj od tih datoteka sustav također staje s radom, kao i u slučaju kada bi napadač nešto promijenio u bazi. Ako unesemo ispravnu glavnu zaporku, te drugačiju zaporku za adresu koja već postoji prijašnja zaporka će se zamijeniti novom. Isto vrijedi i za get naredbu - ako joj damo ispravnu glavnu zaporku sustav će nam vratiti zaporku za adresu koju želimo, a u protivnom će prekinuti s radom s odgovaraćom porukom.

Dakle, kao što je rečeno sigurnost cijelog sustava počiva na glavnoj zaporki. Ona se ne sprema, no pomoću nje se dodaju enkriptirani podaci u bazu u slučaju kada je ispravna.

Integritet adresa i zaporki se postiže tako da se svaki put prilikom enkripcije mijenja salt i inicijalizacijski vektor čime se mijenja i HMAC. S obzirom da je cijela baza šifrirana AES256 enkripcijom, napadač ne može otkriti ništa o adresama ni o zaporkama. Nije u mogućnosti otkriti ni koliko ima adresa i zaporaka u bazi, kao ni duljinu samih zaporaka. Ako se promijeni neka zaporka ili se doda nova automatski se mijenja salt i IV pa napadač ne može otkriti je li nova zaporka isto kao i stara. Time je omogućena povjerljivost zaporki. Također s obzirom da su sve adrese šifrirane osigurana je povjerljivost adresa.
